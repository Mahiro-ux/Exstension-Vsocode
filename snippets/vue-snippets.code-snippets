{
  "Vue Button Flex Layout": {
    "prefix": "vue-btn-flex",
    "body": [
      "<template>",
      "  <div class=\"flex ${1:justify-center} ${2:items-center} ${3:space-x-4} ${4:mt-4}\">",
      "    <button @click=\"$emit('primary-click')\" class=\"px-4 py-2 bg-${5:blue}-500 text-white rounded-lg hover:bg-${5:blue}-600 transition duration-200\">",
      "      ${6:Primary Button}",
      "    </button>",
      "    <button @click=\"$emit('secondary-click')\" class=\"px-4 py-2 bg-${7:gray}-500 text-white rounded-lg hover:bg-${7:gray}-600 transition duration-200\">",
      "      ${8:Secondary Button}",
      "    </button>",
      "  </div>",
      "</template>",
      "",
      "<script>",
      "export default {",
      "  name: '${9:ButtonFlexLayout}',",
      "  emits: ['primary-click', 'secondary-click']",
      "};",
      "</script>",
      "",
      "<style scoped>",
      "/* Anda dapat menambahkan styling kustom di sini jika diperlukan */",
      "</style>"
    ],
    "description": "Button dan flex layout styling di Vue.js"
  },
    "Count Vue": {
      "prefix": "vue-count",
      "body": [
        "<script setup>",
        "import { ref, onMounted } from 'vue';",
        "",
        "// reactive state",
        "const count = ref(0);",
        "",
        "// functions that mutate state and trigger updates",
        "function increment() {",
        "  count.value++;",
        "}",
        "",
        "// lifecycle hooks",
        "onMounted(() => {",
        "  console.log(`The initial count is ${count.value}.`);",
        "});",
        "</script>",
        "",
        "<template>",
        "  <button @click=\"increment\">Count is: {{ count }}</button>",
        "</template>"
      ],
      "description": "Snippet Vue 3 sederhana untuk counter menggunakan ref dan onMounted lifecycle hook."
    }
}
