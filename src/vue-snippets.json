{
  "Count Vue": {
    "body": [
      "<script setup>",
      "import { ref } from 'vue'",
      "",
      "const count = ref(${1:0})",
      "",
      "function increment() {",
      "  count.value++",
      "}",
      "</script>",
      "",
      "<template>",
      "  <button @click=\"increment\">",
      "    Count is: {{ count }}",
      "  </button>",
      "</template>"
    ],
    "description": "Vue 3 counter component",
    "prefix": "vue-count"
  },
  "Vue Button Flex Layout": {
    "body": [
      "<template>",
      "  <div class=\"flex ${1:justify-center} ${2:items-center} ${3:space-x-4} ${4:mt-4}\">",
      "    <button @click=\"${5:handlePrimaryClick}\" class=\"px-4 py-2 bg-${6:blue}-500 text-white rounded-lg hover:bg-${6:blue}-600 transition duration-200\">",
      "      ${7:Primary Button}",
      "    </button>",
      "  </div>",
      "</template>",
      "",
      "<script setup>",
      "const ${5:handlePrimaryClick} = () => {",
      "  // Add your click handler logic here",
      "};",
      "</script>"
    ],
    "description": "Vue 3 button with flex layout",
    "prefix": "vue-btn-flex"
  },
  "Vue List Rendering": {
    "body": [
      "<script setup>",
      "import { ref } from 'vue';",
      "",
      "const items = ref([${1:'Item 1'}, ${2:'Item 2'}, ${3:'Item 3'}]);",
      "</script>",
      "",
      "<template>",
      "  <ul>",
      "    <li v-for=\"(item, index) in items\" :key=\"index\">",
      "      {{ item }}",
      "    </li>",
      "  </ul>",
      "</template>"
    ],
    "description": "Snippet untuk rendering daftar dengan v-for di Vue 3.",
    "prefix": "vue-list"
  },
  "Vue Modal Component": {
    "body": [
      "<template>",
      "  <div v-if=\"isOpen\" class=\"fixed inset-0 bg-black bg-opacity-50 flex justify-center items-center\">",
      "    <div class=\"bg-white rounded-lg p-4\">",
      "      <slot />",
      "      <button @click=\"closeModal\" class=\"mt-4 px-4 py-2 bg-red-500 text-white rounded-lg\">Close</button>",
      "    </div>",
      "  </div>",
      "</template>",
      "",
      "<script setup>",
      "import { ref } from 'vue';",
      "",
      "const isOpen = ref(false);",
      "",
      "function openModal() {",
      "  isOpen.value = true;",
      "}",
      "",
      "function closeModal() {",
      "  isOpen.value = false;",
      "}",
      "</script>"
    ],
    "description": "Snippet untuk membuat modal sederhana di Vue 3.",
    "prefix": "vue-modal"
  },
  "Vue Two-Way Binding": {
    "body": [
      "<script setup>",
      "import { ref } from 'vue';",
      "",
      "const inputValue = ref('');",
      "</script>",
      "",
      "<template>",
      "  <div>",
      "    <input v-model=\"inputValue\" placeholder=\"Type something...\" />",
      "    <p>Input Value: {{ inputValue }}</p>",
      "  </div>",
      "</template>"
    ],
    "description": "Snippet untuk two-way binding menggunakan v-model di Vue 3.",
    "prefix": "vue-bind"
  },
  "Vue Form Validation": {
    "body": [
      "<script setup>",
      "import { ref } from 'vue'",
      "import { useVuelidate } from '@vuelidate/core'",
      "import { required, email, minLength } from '@vuelidate/validators'",
      "",
      "const formData = ref({",
      "  name: '',",
      "  email: '',",
      "  password: ''",
      "})",
      "",
      "const rules = {",
      "  name: { required },",
      "  email: { required, email },",
      "  password: { required, minLength: minLength(8) }",
      "}",
      "",
      "const v$ = useVuelidate(rules, formData)",
      "",
      "async function submitForm() {",
      "  const isValid = await v$.value.$validate()",
      "  if (isValid) {",
      "    // Proses form jika valid",
      "    console.log('Form valid:', formData.value)",
      "  }",
      "}",
      "</script>",
      "",
      "<template>",
      "  <form @submit.prevent=\"submitForm\">",
      "    <div>",
      "      <input v-model=\"formData.name\" placeholder=\"Nama\">",
      "      <span v-if=\"v$.name.$error\" class=\"error\">",
      "        Nama harus diisi",
      "      </span>",
      "    </div>",
      "    ",
      "    <div>",
      "      <input v-model=\"formData.email\" placeholder=\"Email\">",
      "      <span v-if=\"v$.email.$error\" class=\"error\">",
      "        Email tidak valid",
      "      </span>",
      "    </div>",
      "    ",
      "    <div>",
      "      <input v-model=\"formData.password\" type=\"password\" placeholder=\"Password\">",
      "      <span v-if=\"v$.password.$error\" class=\"error\">",
      "        Password minimal 8 karakter",
      "      </span>",
      "    </div>",
      "",
      "    <button type=\"submit\">Submit</button>",
      "  </form>",
      "</template>"
    ],
    "description": "Form validation dengan Vuelidate di Vue 3",
    "prefix": "vue-form-validation"
  }
}